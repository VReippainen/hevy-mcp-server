name: Publish Package

on:
  workflow_dispatch:
    inputs:
      confirm_publish:
        description: 'Type "yes" to confirm publishing'
        required: true
        type: string

jobs:
  # Manual publishing workflow
  publish:
    # This workflow is only triggered manually and confirmation is "yes"
    if: github.event.inputs.confirm_publish == 'yes'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org/'
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 'latest'
          run_install: false
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: Test
        run: pnpm test
      - name: Lint
        run: pnpm lint
      - name: Configure Git user
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
      - name: Get Environment Type
        id: get_env
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ startsWith(github.head_ref, 'feature/') }}" == "true" ]]; then
            echo "ENV_TYPE=alpha" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "ENV_TYPE=beta" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/main" || "${{ startsWith(github.ref, 'refs/tags/v') }}" == "true" ]]; then
            echo "ENV_TYPE=production" >> $GITHUB_OUTPUT
          else
            echo "ENV_TYPE=unknown" >> $GITHUB_OUTPUT
          fi
      - name: Publish alpha
        if: steps.get_env.outputs.ENV_TYPE == 'alpha'
        run: |
          pnpm version:alpha
          pnpm publish:alpha --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Publish beta
        if: steps.get_env.outputs.ENV_TYPE == 'beta'
        run: |
          pnpm version:beta
          pnpm publish:beta --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Publish production
        if: steps.get_env.outputs.ENV_TYPE == 'production'
        run: pnpm publish:prod --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}} 